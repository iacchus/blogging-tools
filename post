#!/usr/bin/env python

import sys
import os
import re
import subprocess
import time
from plumbum import local

PELICAN_CONTENT = os.path.expanduser(os.getenv('PELICAN_CONTENT'))

if not PELICAN_CONTENT:
    print("You should set PELICAN_CONTENT env variable.")
    exit(2)

local.cwd.chdir(PELICAN_CONTENT)

def git_repost():

    GIT = local['git']

    adding = GIT['add', '.']()
    print(adding)

    commiting = GIT['commit', '-a', '-m', 'autocommit']()
    print(commiting)

    pushing = GIT['push']()
    print(pushing)


TIMESTAMP = time.time()

date = local['date']
DATE = date().strip()

LANG = "en"

POST_MODEL = """\
title: {title}
slug: {slug}
lang: {lang}
date: {date}
modified: {date}
tags: {tags}
summary: {summary}
status: published


"""

# PELICAN_ROOT = os.path.expanduser(os.getenv('PELICAN_ROOT'))
#PELICAN_CONTENT = os.path.expanduser(os.getenv('PELICAN_CONTENT'))

EDITOR = os.getenv('EDITOR')

FILE_EXTENSION = ".md"

print(PELICAN_CONTENT)

# -s: subject
# -t: tags
# -e: excerpt
OPTIONS = ['-s', '-l', '-t', '-e']

URI_DICT = {
        'á|à|â|ã': 'a',
        'é|è|ê|ẽ': 'e',
        'í|ì|î|ĩ': 'i',
        'ó|ò|ô|õ': 'o',
        'ú|ù|û|ũ': 'u',
        'ç': 'c',
        '&': 'et',
        '\s': '-',
        ',': '-',
        '~': '-',
        ':': '-',
        '#': '-',
        '\/|\\/': '-',
        '@': 'at',
        '\'|"|\.|!|\^|\$|\?|\[|\]|{|}': '',
        #'\W': '',
        }

key = str()
components = dict()

for arg in sys.argv[1:]:

    if arg in OPTIONS:
        key = arg
        components.update({ key: list() })

    # this way we can omit -s
    elif not key:
        key = '-s'
        components.update({ key: list() })
        components[key].append(arg)

    else:
        try:
            components[key].append(arg)
        except KeyError:
            print(f"You should type an option first. "
                   "Valids are: {OPTIONS}.")
            exit(2)

if '-s' in components.keys():
    title = " ".join(components['-s'])

    uri = str()
    uri = title.lower()
else:
    title = ""
    uri = str(TIMESTAMP)

for regex, replace in URI_DICT.items():
    uri = re.sub(regex, replace, uri)

if '-l' in components.keys():
    lang = "".join(components['-e'])
else:
    lang = LANG

if '-t' in components.keys():
    tags = " ".join(components['-t'])
else:
    tags = ""

if '-e' in components.keys():
    summary = " ".join(components['-e'])
else:
    summary = ""

pre_post = POST_MODEL.format(title=title, slug=uri, lang=lang,
                             date=DATE, tags=tags, summary=summary)

lang_uri = f"{lang}-" + uri

filename = f"{PELICAN_CONTENT}/{lang_uri}{FILE_EXTENSION}"
print(filename)

if not os.path.exists(filename):
    with open(filename, "w") as post_file:
        post_file.write(pre_post)

#subprocess.call([EDITOR, filename], shell=True)
ed_options = '+norm G'  # in NORMAL mode set the cursor to the end of the file
subprocess.call([EDITOR, ed_options, filename])

do_post = input('commit and push changes? (N/y) ')

if do_post in ('y', 'Y'):
    git_repost()


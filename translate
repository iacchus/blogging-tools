#!/usr/bin/env python

import sys
import os
import re
from subprocess import Popen, call, PIPE, STDOUT
import glob

p = Popen('date', stdout=PIPE, stdin=PIPE,
                     stderr=STDOUT)
DATE = p.stdout.read().decode('utf-8').strip()

PELICAN_ROOT = os.path.expanduser(os.getenv('PELICAN_ROOT'))
PELICAN_CONTENT = os.path.expanduser(os.getenv('PELICAN_CONTENT'))

EDITOR = os.getenv('EDITOR')

FILE_EXTENSION = ".md"

LANGUAGES = ['en', 'pt']

if not PELICAN_ROOT:
    print("You should set PELICAN_ROOT env variable.")
    exit(1)

if not PELICAN_CONTENT:
    print("You should set PELICAN_CONTENT env variable.")
    exit(2)

ls = Popen(f'ls {PELICAN_CONTENT}/*.md', shell=True, stdout=PIPE, stdin=PIPE,
           stderr=PIPE)
lst = ls.communicate()[0]
ls.stdout.close()

pre_lst = lst.decode('utf-8').strip().split('\n')
new_lst = "\n".join([path.split('/')[-1] for path in pre_lst
                     if path.endswith(FILE_EXTENSION)]).encode('utf-8')

fzf = Popen('fzf', shell=True, stdin=PIPE, stdout=PIPE)
output, err = fzf.communicate(input=new_lst)

src_filename = output.decode('utf-8').strip()

(lang, filename_uri) = src_filename.split('-', 1)

if lang in LANGUAGES:
    if lang == 'en':
        lang = 'pt'
    else:
        lang = 'en'

    translate_filename = f"{lang}-{filename_uri}"

else:
    the_non_default_lang = "pt"
    translate_filename = f"{the_non_default_lang}-{filename_uri}"

src_path = f"{PELICAN_CONTENT}/{src_filename}"
translation_path = f"{PELICAN_CONTENT}/{translate_filename}"

call(["cp", "-n", src_path, translation_path])

print(*["copying", src_path, "to", translation_path])

call([EDITOR, translation_path])

do_post = input('Commit and push changes, thus modifying'
                ' the `modified\' date? (N/y) ')

if do_post in ('y', 'Y'):

    modified_line = int()

    with open(translation_path, 'r') as post:
        post_data = post.readlines()

    # let's rewrite the metadata
    for idx, line in enumerate(post_data):
        if line.startswith('lang:') and lang in LANGUAGES:
            post_data[idx] = f'lang: {lang}\n'
            #break
        if line.startswith('modified:'):
            post_data[idx] = f'modified: {DATE}\n'
            #break

    post_date_modified = "".join(post_data)

    with open(translation_path, 'w') as post:
        post.write(post_date_modified)

    os.chdir(PELICAN_ROOT)
    call(['./build.sh'])
